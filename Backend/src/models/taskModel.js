const mongoose = require('mongoose');

const taskSchema = new mongoose.Schema({
    title: {
        type: String,
        required: true,
        trim: true
    },
    description: {
        type: String,
        trim: true
    },
    taskType: {
        type: String,
        enum: ['scheduled', 'deadline', 'flexible', 'habit'],
        required: true
    },
    // For scheduled tasks (specific start/end time)
    scheduledTime: {
        type: Date,
        required: true
    },
    // For deadline tasks
    deadline: {
        type: Date,
        required: true
    },
    estimatedDuration: {
        type: Number, // in minutes
        required: true
    },
    // For flexible/habit tasks
    recurring: {
        isRecurring: {
            type: Boolean,
            default: false
        },
        frequency: {
            type: String,
            enum: ['daily', 'weekly', 'monthly', 'yearly'],
            required: function() {
                return this.recurring.isRecurring;
            }
        },
        preferredDays: [{
            type: String,
            enum: ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday']
        }],
        preferredTimeOfDay: {
            type: String,
            enum: ['morning', 'afternoon', 'evening'],
            default: 'morning'
        },
        endDate: Date
    },
    status: {
        type: String,
        enum: ['Todo', 'In Progress', 'Completed'],
        default: 'Todo'
    },
    priority: {
        type: String,
        enum: ['Low', 'Medium', 'High'],
        default: 'Medium'
    },
    category: {
        type: String,
        trim: true,
        default: 'General'
    },
    tags: [{
        type: String,
        trim: true
    }],
    userId: {
        type: mongoose.Schema.Types.ObjectId,
        ref: 'User',
        required: true
    },
    // Generated by the planning algorithm
    suggestedSchedule: [{
        date: Date,
        startTime: String,
        endTime: String,
        status: {
            type: String,
            enum: ['suggested', 'accepted', 'rejected', 'completed'],
            default: 'suggested'
        }
    }],
    dependencies: [{
        taskId: {
            type: mongoose.Schema.Types.ObjectId,
            ref: 'Task'
        },
        type: {
            type: String,
            enum: ['finish-to-start', 'start-to-start', 'finish-to-finish'],
            default: 'finish-to-start'
        }
    }],
    energyLevel: {
        required: {
            type: String,
            enum: ['low', 'medium', 'high'],
            default: 'medium'
        },
        preferred: {
            type: String,
            enum: ['morning', 'afternoon', 'evening'],
            default: 'morning'
        }
    },
    // For machine learning purposes
    completionHistory: [{
        scheduledStart: Date,
        actualStart: Date,
        scheduledEnd: Date,
        actualEnd: Date,
        energyLevelReported: {
            type: String,
            enum: ['low', 'medium', 'high']
        },
        productivity: {
            type: Number,
            min: 1,
            max: 5
        }
    }],
    externalCalendarEventId: String,
    notifications: [{
        type: {
            type: String,
            enum: ['reminder', 'deadline', 'dependency', 'suggestion'],
            required: true
        },
        time: Date,
        message: String,
        status: {
            type: String,
            enum: ['pending', 'sent', 'read'],
            default: 'pending'
        }
    }]
}, {
    timestamps: true
});

module.exports = mongoose.model('Task', taskSchema);
